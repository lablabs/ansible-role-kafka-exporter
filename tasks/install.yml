---
- name: Install dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ kafka_exporter_dependencies }}"

- name: Create the kafka_exporter group
  group:
    name: "{{ kafka_exporter_system_group }}"
    state: present
    system: true

- name: Create the kafka_exporter user
  user:
    name: "{{ kafka_exporter_system_user }}"
    groups: "{{ kafka_exporter_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
    home: /

- name: Download kafka_exporter binary to local folder
  become: false
  get_url:
    url: "{{ kafka_exporter_base_url }}{{ kafka_exporter_version }}/kafka_exporter-{{ kafka_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp/kafka_exporter-{{ kafka_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  check_mode: false

- name: Unpack kafka_exporter binary
  become: false
  unarchive:
    src: "/tmp/kafka_exporter-{{ kafka_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/kafka_exporter-{{ kafka_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/kafka_exporter"
    remote_src: true
  check_mode: false

- name: Create /usr/local/bin
  file:
    path: /usr/local/bin
    state: directory
    mode: 0755

- name: Propagate kafka_exporter binaries
  copy:
    src: "/tmp/kafka_exporter-{{ kafka_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/kafka_exporter"
    dest: "/usr/local/bin/kafka_exporter"
    mode: 0750
    owner: "{{ kafka_exporter_system_user }}"
    group: "{{ kafka_exporter_system_group }}"
    remote_src: yes
  notify: restart kafka_exporter
  when: not ansible_check_mode